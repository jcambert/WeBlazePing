// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using WePing.Gir;

#nullable disable

namespace WePing.Gir.Migrations
{
    [DbContext(typeof(GirContext))]
    partial class GirContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("WePing.Gir.Joueur", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<bool>("Absent")
                        .HasColumnType("boolean");

                    b.Property<bool>("Capitaine")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("DeletionDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("EstRemplacant")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Licence")
                        .HasColumnType("text");

                    b.Property<DateTime?>("ModificationDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Nom")
                        .HasColumnType("text");

                    b.Property<string>("NumeroClub")
                        .HasColumnType("text");

                    b.Property<string>("Ordre")
                        .HasColumnType("text");

                    b.Property<double>("Points")
                        .HasColumnType("double precision");

                    b.Property<string>("Prenom")
                        .HasColumnType("text");

                    b.Property<Guid?>("RencontreId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("RencontreId");

                    b.ToTable("Joueurs");
                });

            modelBuilder.Entity("WePing.Gir.ModeleRencontre", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("AutoriseRemplacement")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("DeletionDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("ModificationDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("NombreDeGroupe")
                        .HasColumnType("integer");

                    b.Property<int>("NombreMancheGagnante")
                        .HasColumnType("integer");

                    b.Property<int>("NombreRemplacant")
                        .HasColumnType("integer");

                    b.Property<bool>("ParticipationUniqueAuDouble")
                        .HasColumnType("boolean");

                    b.Property<string>("Reference")
                        .HasColumnType("text");

                    b.Property<bool>("ScoreAquis")
                        .HasColumnType("boolean");

                    b.Property<string>("Type")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("ModeleRencontre");
                });

            modelBuilder.Entity("WePing.Gir.ModeleRencontrePartie", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("DeletionDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("EstDouble")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("JoueurA")
                        .HasColumnType("text");

                    b.Property<string>("JoueurB")
                        .HasColumnType("text");

                    b.Property<Guid?>("ModeleRencontreId")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("ModificationDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("ModeleRencontreId");

                    b.ToTable("ModeleRencontrePartie");
                });

            modelBuilder.Entity("WePing.Gir.Partie", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("DeletionDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("EstDouble")
                        .HasColumnType("boolean");

                    b.Property<int>("Index")
                        .HasColumnType("integer");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("JoueurA")
                        .HasColumnType("text");

                    b.Property<string>("JoueurB")
                        .HasColumnType("text");

                    b.Property<DateTime?>("ModificationDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("NomJoueurA")
                        .HasColumnType("text");

                    b.Property<string>("NomJoueurB")
                        .HasColumnType("text");

                    b.Property<int>("NombreMancheGagnante")
                        .HasColumnType("integer");

                    b.Property<Guid?>("RencontreId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("RencontreId");

                    b.ToTable("Parties");
                });

            modelBuilder.Entity("WePing.Gir.Rencontre", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("DeletionDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("EquipeAdverse")
                        .HasColumnType("text");

                    b.Property<string>("EquipeDomicile")
                        .HasColumnType("text");

                    b.Property<bool>("EstPrete")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("LockBy")
                        .HasColumnType("text");

                    b.Property<DateTime?>("LockOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("Locked")
                        .HasColumnType("boolean");

                    b.Property<Guid?>("ModeleId")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("ModificationDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("NombreDePartie")
                        .HasColumnType("integer");

                    b.Property<bool>("ScoreAquis")
                        .HasColumnType("boolean");

                    b.HasKey("Id");

                    b.HasIndex("ModeleId");

                    b.ToTable("Rencontre");
                });

            modelBuilder.Entity("WePing.Gir.Score", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("DeletionDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("ModificationDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("PartieId")
                        .HasColumnType("uuid");

                    b.Property<int?>("Valeur")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("PartieId");

                    b.ToTable("Score");
                });

            modelBuilder.Entity("WePing.Gir.Joueur", b =>
                {
                    b.HasOne("WePing.Gir.Rencontre", null)
                        .WithMany("Joueurs")
                        .HasForeignKey("RencontreId");
                });

            modelBuilder.Entity("WePing.Gir.ModeleRencontrePartie", b =>
                {
                    b.HasOne("WePing.Gir.ModeleRencontre", null)
                        .WithMany("Parties")
                        .HasForeignKey("ModeleRencontreId");
                });

            modelBuilder.Entity("WePing.Gir.Partie", b =>
                {
                    b.HasOne("WePing.Gir.Rencontre", null)
                        .WithMany("Parties")
                        .HasForeignKey("RencontreId");
                });

            modelBuilder.Entity("WePing.Gir.Rencontre", b =>
                {
                    b.HasOne("WePing.Gir.ModeleRencontre", "Modele")
                        .WithMany()
                        .HasForeignKey("ModeleId");

                    b.Navigation("Modele");
                });

            modelBuilder.Entity("WePing.Gir.Score", b =>
                {
                    b.HasOne("WePing.Gir.Partie", null)
                        .WithMany("Scores")
                        .HasForeignKey("PartieId");
                });

            modelBuilder.Entity("WePing.Gir.ModeleRencontre", b =>
                {
                    b.Navigation("Parties");
                });

            modelBuilder.Entity("WePing.Gir.Partie", b =>
                {
                    b.Navigation("Scores");
                });

            modelBuilder.Entity("WePing.Gir.Rencontre", b =>
                {
                    b.Navigation("Joueurs");

                    b.Navigation("Parties");
                });
#pragma warning restore 612, 618
        }
    }
}
